package com.dtalk.dd.DB.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.dtalk.dd.DB.entity.ApplicantEntity;
import com.dtalk.dd.DB.entity.DepartmentEntity;
import com.dtalk.dd.DB.entity.GifEmoEntity;
import com.dtalk.dd.DB.entity.UserEntity;
import com.dtalk.dd.DB.entity.GroupEntity;
import com.dtalk.dd.DB.entity.MessageEntity;
import com.dtalk.dd.DB.entity.SessionEntity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig departmentDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig groupDaoConfig;
    private final DaoConfig messageDaoConfig;
    private final DaoConfig sessionDaoConfig;
    private final DaoConfig applicantDaoConfig;
    private final DaoConfig friendUserDaoConfig;
    private final DaoConfig gifEmoDaoConfig;

    private final DepartmentDao departmentDao;
    private final UserDao userDao;
    private final GroupDao groupDao;
    private final MessageDao messageDao;
    private final SessionDao sessionDao;
    private final ApplicantDao applicantDao;
    private final FriendDao friendDao;
    private final GifEmoDao gifEmoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        departmentDaoConfig = daoConfigMap.get(DepartmentDao.class).clone();
        departmentDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        sessionDaoConfig = daoConfigMap.get(SessionDao.class).clone();
        sessionDaoConfig.initIdentityScope(type);

        applicantDaoConfig = daoConfigMap.get(ApplicantDao.class).clone();
        applicantDaoConfig.initIdentityScope(type);

        friendUserDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendUserDaoConfig.initIdentityScope(type);

        gifEmoDaoConfig = daoConfigMap.get(GifEmoDao.class).clone();
        gifEmoDaoConfig.initIdentityScope(type);

        departmentDao = new DepartmentDao(departmentDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);
        messageDao = new MessageDao(messageDaoConfig, this);
        sessionDao = new SessionDao(sessionDaoConfig, this);
        applicantDao = new ApplicantDao(applicantDaoConfig, this);
        friendDao = new FriendDao(friendUserDaoConfig, this);
        gifEmoDao = new GifEmoDao(gifEmoDaoConfig, this);

        registerDao(DepartmentEntity.class, departmentDao);
        registerDao(UserEntity.class, userDao);
        registerDao(GroupEntity.class, groupDao);
        registerDao(MessageEntity.class, messageDao);
        registerDao(SessionEntity.class, sessionDao);
        registerDao(ApplicantEntity.class, applicantDao);
        registerDao(UserEntity.class, friendDao);
        registerDao(GifEmoEntity.class, gifEmoDao);
    }
    
    public void clear() {
        departmentDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        groupDaoConfig.getIdentityScope().clear();
        messageDaoConfig.getIdentityScope().clear();
        sessionDaoConfig.getIdentityScope().clear();
        applicantDaoConfig.getIdentityScope().clear();
        friendUserDaoConfig.getIdentityScope().clear();
        gifEmoDaoConfig.getIdentityScope().clear();
    }

    public DepartmentDao getDepartmentDao() {
        return departmentDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public GroupDao getGroupDao() {
        return groupDao;
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public SessionDao getSessionDao() {
        return sessionDao;
    }

    public ApplicantDao getApplicantDao() {
        return applicantDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public GifEmoDao getGifEmoDao() {return gifEmoDao;}
}
